
# A string used to distinguish different Supabase projects on the same host. Defaults to the
# working directory name when running `supabase init`.
project_id = "xrdzfyxesrcbkatygoij"

[api]
enabled = true
# Port to use for the API URL.
port = 54321
schemas = ["public", "storage", "graphql_public"]

[db]
# Port to use for the local database URL.
port = 54322
# The database major version to use. This has to be the same as your remote database's.
# Major versions include new features. Minor versions only include bug fixes.
major_version = 15

[studio]
enabled = true
# Port to use for Supabase Studio.
port = 54323
# External URL of the API server that frontend connects to.
api_url = "http://localhost"

# Email testing server. Emails sent with the local dev setup are not actually sent - the
# mail server will catch them and allow you to view them from the UI.
[inbucket]
enabled = true
# Port to use for the email testing server web UI.
port = 54324
smtp_port = 54325
pop3_port = 54326

[storage]
enabled = true
# The maximum file size allowed (e.g. "5MB", "500KB").
file_size_limit = "50MiB"

[auth]
enabled = true
# The base URL of your website. Used as an allow-list for redirects and for constructing URLs used
# in emails.
site_url = "http://localhost:3000"
# A list of *exact* URLs that auth providers are permitted to redirect to post authentication.
additional_redirect_urls = ["https://localhost:3000"]
# How long tokens are valid for, in seconds. Defaults to 3600 (1 hour), maximum 604,800 (1 week).
jwt_expiry = 3600
# If disabled, the refresh token will never expire.
enable_refresh_token_rotation = true
# Allows refresh tokens to be reused after expiry, up to the specified interval in seconds.
# Requires enable_refresh_token_rotation = true.
refresh_token_reuse_interval = 30
# Allow/disallow new user signups to your project.
enable_signup = true

[auth.email]
# Allow/disallow new user signups via email to your project.
enable_signup = true
# If enabled, a user will be required to confirm any email change on both the old, and new email
# addresses. If disabled, only the new email is required to confirm.
double_confirm_changes = true
# If enabled, users need to confirm their email address before signing in.
enable_confirmations = false

# Configure one of the supported SMS providers: twilio, messagebird, textlocal, vonage
[auth.sms]
enable_signup = true
enable_confirmations = false

[auth.external.github]
enabled = true
client_id = "env(SUPABASE_AUTH_GITHUB_CLIENT_ID)"
secret = "env(SUPABASE_AUTH_GITHUB_SECRET)"
# Overrides the default auth redirectUrl.
redirect_uri = ""
# Overrides the default auth provider URL. Used to support self-hosted gitlab, single-tenant Azure,
# or any other third-party OIDC providers.
url = ""

[analytics]
enabled = false
port = 54327
vector_port = 54328
# Configure one of the supported backends: postgres, bigquery, snowflake
backend = "postgres"

# Configure rate limiting for the API. Expressed in requests per second.
[api.rate_limits]
# Apply a default rate limit per IP to all endpoints of the API gateway
enabled = false
# Value in request / second
points = 1000
# Time window in seconds
time_window = 60

# Configure edge functions
[functions]
enabled = true
port = 54334
[functions.send-workspace-invitation]
verify_jwt = true

[functions.accept-workspace-invitation]
verify_jwt = true

[functions.monthly-credit-topup]
verify_jwt = false # This function should run without user authentication

[functions.create-checkout]
verify_jwt = true # User should be signed in to create a checkout

[functions.secure-api-proxy]
verify_jwt = true # User should be signed in to use this proxy

[functions.generate-dataweave]
verify_jwt = true # User should be signed in to generate DataWeave

[functions.generate-integration]
verify_jwt = true # User should be signed in to generate integrations

[functions.APL_generate-raml]
verify_jwt = true # User should be signed in to generate RAML

[functions.generate-munit]
verify_jwt = true # User should be signed in to generate MUnit tests

[functions.get-api-key]
verify_jwt = true # User should be signed in to get API keys

[functions.signOutSession]
verify_jwt = true # User should be signed in to sign out sessions

[functions.reset-credits]
verify_jwt = false # This function can run without authentication as a scheduled task

[functions.stripe-webhook]
verify_jwt = false # Stripe webhooks don't include JWT
